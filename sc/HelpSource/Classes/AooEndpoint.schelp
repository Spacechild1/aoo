TITLE:: AooEndpoint
summary:: Represents an AOO endpoint
categories:: External Control>AOO
related:: Classes/AooAddr, Classes/AooPeer, Classes/AooClient, Classes/AooSendCtl, Classes/AooReceiveCtl

DESCRIPTION::
AooEndpoint respresents an AOO endpoint, which can be either an AOO source (e.g. link::Classes/AooSend::) or an AOO sink (e.g. link::Classes/AooReceive::).

Every AOO endpoint is defined by a network endpoint (link::Classes/AooAddr:: or link::Classes/AooPeer::) and an ID. The latter distinguishes multiple sources resp. sinks on the same port.

AooEndpoint objects are often returned from event handlers:

code::
// ~synth is a Synth containing an AooReceive instance
~ctl = AooReceiveCtl(~synth);
~ctl.addListener(\start, { |source, metadata|
	// source is an AooEndpoint
	"new stream from source %s".format(source).postln;
});
::


CLASSMETHODS::

METHOD:: new

ARGUMENT:: addr
network endpoint (link::Classes/AooAddr:: or link::Classes/AooPeer::)

ARGUMENT:: id
source/sink ID (Integer)


INSTANCEMETHODS::

METHOD:: addr
network endpoint (link::Classes/AooAddr:: or link::Classes/AooPeer::)

METHOD:: id
source/sink ID (Integer)

METHOD:: ==
Two AooEndpoint objects compare equal if their addresses and IDs compare equal.


METHOD:: hash

custom hash function which allows AooEndpoint to be used as a key in associative containers (e.g. link::Classes/IdentityDictionary::).
