#N canvas 973 114 657 667 12;
#X declare -lib aoo;
#X text 276 346 creation arguments:;
#N canvas 961 0 696 906 events 0;
#X obj 37 32 inlet;
#X text 63 144 a source has been added;
#X obj 37 85 outlet;
#X msg 38 219 invite_timeout <host> <port> <ID>;
#X text 64 243 an invite request for the given source has timed out;
#X text 71 421 the stream has been stopped;
#X obj 115 59 tgl 19 0 \$0-ping \$0-ping empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X text 140 59 post pings;
#N canvas 518 262 811 433 route 0;
#X obj 83 58 inlet;
#X obj 83 264 outlet;
#X obj 154 117 r \$0-ping;
#X obj 115 145 spigot;
#X obj 83 117 t b a;
#X obj 115 172 list prepend ping;
#X obj 115 204 list trim;
#X text 167 145 filter pings;
#X obj 115 235 print aoo_receive~;
#X obj 319 117 r \$0-time;
#X obj 280 144 spigot;
#X obj 280 172 list prepend time;
#X obj 280 200 list trim;
#X obj 280 228 print aoo_receive~;
#X obj 491 289 route osc fudi, f 20;
#X obj 491 319 oscparse;
#X obj 559 319 fudiparse;
#X obj 491 262 list trim;
#X obj 451 229 list split 3;
#X obj 483 144 print aoo_receive~;
#X obj 451 116 t a a;
#X obj 83 88 route ping time, f 53;
#X text 466 174 parse stream metadata and stream messages;
#X obj 451 202 route start msg, f 28;
#X obj 491 347 print DATA;
#X obj 547 230 list split 4;
#X connect 0 0 21 0;
#X connect 2 0 3 1;
#X connect 3 0 5 0;
#X connect 4 0 1 0;
#X connect 4 1 3 0;
#X connect 5 0 6 0;
#X connect 6 0 8 0;
#X connect 9 0 10 1;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 14 0 15 0;
#X connect 14 1 16 0;
#X connect 15 0 24 0;
#X connect 16 0 24 0;
#X connect 17 0 14 0;
#X connect 18 1 17 0;
#X connect 20 0 23 0;
#X connect 20 1 19 0;
#X connect 21 0 4 0;
#X connect 21 1 10 0;
#X connect 21 2 20 0;
#X connect 23 0 18 0;
#X connect 23 1 25 0;
#X connect 25 1 17 0;
#X restore 37 59 pd route;
#X f 9;
#X msg 38 122 add <host> <port> <ID>;
#X msg 38 170 remove <host> <port> <ID>;
#X text 65 192 a source has been removed;
#X msg 40 271 uninvite_timeout <host> <port> <ID>;
#X text 66 295 an uninvite request for the given source has timed out;
#X text 42 1645 ---;
#X text 67 1375 jitter buffer overrun. If this happens repeatedly \, try to increase the latency., f 80;
#X text 66 1435 jitter buffer underrun. If this happens repeatedly \, try to increase the latency., f 80;
#X text 74 986 <delta1> is the approx. delay between sink and source (in ms), f 62;
#X text 74 1007 <delta2> is the approx. delay between sink and source (in ms), f 62;
#X text 72 949 A periodic message exchanged between sink and source that may be used for network latency estimation., f 71;
#X text 71 476 the source has change its state (0: idle \, 1: active \, 2: buffering), f 67;
#X text 74 556 the source format has changed \, see [pd format ...] in [aoo_send~], f 66;
#X text 70 1495 empty blocks because of source xrun;
#X text 69 1607 blocks have been dropped because they did not arrive. typically caused by jitter or packet loss.;
#X text 70 1550 blocks have been successfully resent;
#X msg 38 590 msg <host> <port> <ID> <channel> <type> <data...>;
#X text 65 616 a stream message from a particular source. See [pd message] in [aoo_send~]., f 75;
#X text 64 636 NB: this event is scheduled sample accurately \, albeit with one block delay., f 76;
#X text 73 497 NB: this event is scheduled sample accurately \, albeit with a one block delay., f 77;
#X msg 38 329 start <host> <port> <ID> [<type> <data...>];
#X text 73 353 a new stream has been started. <type> and <data...> are the (optional) stream metadata \, see [pd metadata] in [aoo_send~]., f 62;
#X msg 39 398 stop <host> <port> <ID>;
#X msg 39 452 state <host> <port> <ID> <state>;
#X msg 38 1351 overrun <host> <port> <ID>;
#X msg 38 1407 underrun <host> <port> <ID>;
#X msg 38 1468 block_xrun <host> <port> <ID> <count>;
#X msg 38 1523 block_resent <host> <port> <ID> <count>;
#X msg 39 1579 block_dropped <host> <port> <ID> <count>;
#X obj 229 60 tgl 19 0 \$0-time \$0-time empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X text 252 60 post stream time;
#X msg 36 920 ping <host> <port> <ID> <delta1> <delta2> <network_rtt> <total_rtt>, f 69;
#X text 74 1047 <total_rtt> is the total roundtrip time (in ms), f 49;
#X msg 38 528 format <host> <port> <ID> <codec> <channels> <blocksize> <sr> ..., f 66;
#X text 69 695 stream time stamp.;
#X text 67 796 This means that the time values are relative \, but since all AOO objects (in the same Pd process) share the same time base \, they can be compared to each other., f 80;
#X text 68 762 Since Pd cannot accurately represent NTP time stamps \, they are converted to the number of elapsed milliseconds since the AOO library has been loaded., f 78;
#X text 74 1027 <network_rtt> is the approx. network roundtrip time (in ms), f 73;
#X text 75 1071 NOTE: The roundtrip time does not necessarily equal the sum of the deltas because the clocks may be out of sync. If one clock runs significantly early or late \, the deltas can even be negative!, f 75;
#X text 76 1121 HINT: The clock time offset can estimated with (delta1 - delta2) * 0.5., f 73;
#X msg 37 671 time <host> <port> <ID> <source_time> <sink_time>;
#X text 69 715 <source_time> is the source time \, <sink_time> is the corresponding local time. Both are measured in (logical) sample time \, using the respective stream start time as their reference point., f 79;
#X text 67 855 HINT: This can be used to synchronize multiple independent streams., f 76;
#X text 66 833 The event is scheduled sample accurately \, but with a one block delay., f 77;
#X text 67 877 NB: If the sink clock runs ahead of the source clock \, <source_time> can even be negative!, f 77;
#X msg 38 1153 latency <source_latency> <sink_latency> <buffer_latency>;
#X text 67 1177 one or more latency values have changed., f 44;
#X text 69 1320 All values are measured in milliseconds., f 43;
#X text 70 1197 <source_latency> is the sum of the source-side reblock/resample latency and codec delay. It is typically constant for the whole stream., f 76;
#X text 69 1232 <sink_latency> is the sum of the sink-side (local) reblock/resample latency and codec delay. It is typically constant for the whole stream., f 76;
#X text 69 1269 <buffer_latency> is the *actual* jitter buffer latency. It can differ from the nominal latency and even change during the stream \, e.g. after buffer underruns or overruns., f 77;
#X connect 0 0 8 0;
#X connect 8 0 2 0;
#X restore 182 397 pd events;
#X msg 530 534 \; pd dsp \$1;
#X msg 79 201 list_sources;
#X text 179 192 list sources. This will output a message [source <host> <port> <id>( for each source., f 45;
#X obj 474 24 declare -lib aoo;
#X msg 38 64 invite localhost 9998 1;
#X text 216 64 invite an AoO source (hostname \, port \, source ID);
#X msg 46 98 uninvite localhost 9998 1;
#X text 236 97 uninvite an AoO source (hostname \, port \, source ID);
#X text 33 498 another sink on the same port;
#X obj 36 549 env~;
#X floatatom 36 573 5 0 0 0 - - - 0;
#X obj 107 550 env~;
#X floatatom 107 574 5 0 0 0 - - - 0;
#X text 199 548 the same port can also be used by sources;
#X msg 58 130 uninvite;
#N canvas 1238 69 658 809 advanced 0;
#X msg 143 692 packetsize \$1;
#X text 255 666 max. UDP packet size (default: 512 bytes);
#X msg 95 346 reset;
#X text 152 339 reset all sources (e.g. if the stream seems to be broken or out of sync), f 47;
#X text 270 390 reset individual source;
#X msg 101 389 reset localhost 9998 1;
#X msg 84 26 0;
#X msg 39 53 port \$1;
#X msg 49 105 id \$1;
#X msg 123 525 resend \$1;
#X msg 128 580 resend_limit \$1;
#X msg 134 631 resend_interval \$1;
#X text 276 621 time interval (ms) between resend requests (default: 10 ms), f 44;
#X text 202 509 enable/disable resending of lost packets (enabled by default), f 40;
#X text 120 476 packet resending:;
#X msg 79 259 fill_ratio localhost 9998 1;
#X msg 149 863 dynamic_resampling \$1;
#X msg 159 924 dll_bandwidth \$1;
#X msg 72 221 ping \$1;
#X text 138 221 set ping interval in ms (default: 1000) \, 0 = off;
#X text 312 850 enable/disable dynamic resampling (off by default), f 34;
#X msg 161 1041 binary \$1;
#X obj 161 1016 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X text 242 1029 enable/disable binary message format (on by default), f 36;
#X floatatom 39 26 5 0 0 0 - - - 0;
#X floatatom 49 82 5 0 0 0 - - - 0;
#X floatatom 72 197 5 0 0 0 - - - 0;
#X obj 123 501 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X floatatom 128 555 5 0 0 0 - - - 0;
#X floatatom 134 608 5 0 0 0 - - - 0;
#X floatatom 143 667 6 0 0 0 - - - 0;
#X obj 149 837 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X floatatom 159 899 8 0 0 0 - - - 0;
#X msg 110 446 buffersize \$1;
#X floatatom 110 422 6 0 0 0 - - - 0;
#X text 222 426 actual jitter buffer size (in ms).;
#X text 223 448 0 = automatic (2 * latency).;
#X msg 88 303 fill_ratio;
#X text 284 255 get the current buffer fill ratio of the given source. 0: empty \, 1: full, f 38;
#X text 175 302 get current buffer fill ratio (first/only source);
#X obj 39 1090 s \$0-msg;
#X msg 145 765 resample_method \$1;
#X symbolatom 145 739 10 0 0 0 - - - 0;
#X text 290 773 "cubic": cubic interpolation (= default);
#X text 290 793 "linear": linear interpolation;
#X text 290 813 "hold": sample and hold;
#X text 292 731 Set the resample method.;
#X text 292 752 Possible values (in decreasing quality):;
#X text 254 685 the default is safe for the public internet \, but you may increase it on connections with a larger MTU., f 53;
#X text 252 565 max. number of blocks to request per DSP tick (default: 16), f 46;
#X text 288 914 time DLL filter bandwidth for dynamic resampling (default: 0.012), f 38;
#X msg 160 963 real_samplerate;
#X text 287 961 get the "real" samplerate as measured by the time DLL filter and output as a [real_samplerate <f>( message., f 39;
#X msg 61 165 set \$1 \$2;
#X msg 61 137 1000 1;
#X text 101 53 change UDP port;
#X msg 118 137 1001 4;
#X text 103 104 change sink ID;
#X text 145 166 set UDP port and sink ID;
#X text 118 26 0 = don't listen;
#X connect 0 0 40 0;
#X connect 2 0 40 0;
#X connect 5 0 40 0;
#X connect 6 0 7 0;
#X connect 7 0 40 0;
#X connect 8 0 40 0;
#X connect 9 0 40 0;
#X connect 10 0 40 0;
#X connect 11 0 40 0;
#X connect 15 0 40 0;
#X connect 16 0 40 0;
#X connect 17 0 40 0;
#X connect 18 0 40 0;
#X connect 21 0 40 0;
#X connect 22 0 21 0;
#X connect 24 0 7 0;
#X connect 25 0 8 0;
#X connect 26 0 18 0;
#X connect 27 0 9 0;
#X connect 28 0 10 0;
#X connect 29 0 11 0;
#X connect 30 0 0 0;
#X connect 31 0 16 0;
#X connect 32 0 17 0;
#X connect 33 0 40 0;
#X connect 34 0 33 0;
#X connect 37 0 40 0;
#X connect 41 0 40 0;
#X connect 42 0 41 0;
#X connect 51 0 40 0;
#X connect 53 0 40 0;
#X connect 54 0 53 0;
#X connect 56 0 53 0;
#X restore 224 296 pd advanced;
#X text 302 612 see also;
#X obj 372 612 aoo_send~;
#X text 174 262 increase for jittery \, unreliable networks!;
#N canvas 0 50 450 387 output 0;
#X obj 105 188 inlet~;
#X obj 173 191 inlet~;
#X obj 238 100 loadbang;
#X msg 238 124 -100;
#X obj 238 148 s /\$0/master;
#X obj 143 108 nbx 5 14 -100 0 0 0 /\$0/master /\$0/master empty 0 -8 0 10 #fcfcfc #000000 #000000 0 256;
#X obj 201 105 cnv 15 1 1 empty empty dB 0 12 0 14 #fcfcfc #000000 0;
#X obj 105 105 cnv 15 1 1 empty empty Vol: 0 12 0 14 #fcfcfc #000000 0;
#X obj 227 191 r /\$0/master;
#X obj 227 215 + 100;
#X obj 227 239 dbtorms;
#X msg 227 263 \$1 50;
#X obj 227 288 line~;
#X obj 105 322 *~;
#X obj 174 323 *~;
#X obj 104 352 dac~;
#X connect 0 0 13 0;
#X connect 1 0 14 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 12 0 13 1;
#X connect 12 0 14 1;
#X connect 13 0 15 0;
#X connect 14 0 15 1;
#X coords 0 -1 1 1 120 30 2 100 100;
#X restore 37 396 pd output;
#X obj 449 612 aoo_client;
#X obj 535 612 aoo_server;
#N canvas 1038 65 497 691 metadata 0;
#X text 39 207 "text": UTF-8 encoded plain text;
#X text 40 228 "json": UTF-8 encoded JSON;
#X text 41 250 "xml": UTF-8 encoded XML;
#X text 42 273 "osc": an OSC message;
#X obj 58 464 oscformat;
#X text 30 128 The actual content and its interpretation is user-defined and will be different for each application., f 58;
#X obj 196 462 fudiformat;
#X text 135 464 "osc";
#X text 278 463 "fudi";
#X text 41 297 "fudi": a FUDI message;
#X text 42 320 "midi": a MIDI message;
#X msg 196 434 foo 1 2 3;
#X text 31 35 Users can add stream metadata to the "invite" message to inform the other end about properties like channel layout \, musical information \, etc.;
#X text 30 91 The metadata will be output in the [aoo_send~] object as part of the "invite" event message.;
#X obj 58 522 list prepend invite localhost 9998 1;
#X msg 76 586 uninvite localhost 9998 1;
#X obj 58 550 list trim;
#X obj 58 493 list prepend osc;
#X obj 196 492 list prepend fudi;
#X msg 42 396 invite <host> <port> <id> <type> <data...>;
#X obj 42 627 outlet;
#X msg 58 435 set foo \, 1 2 3;
#X text 43 341 "raw": raw bytes;
#X text 30 163 The metadata consists of a "type" symbol \, followed by a list of bytes or numbers. "type" must be one of the following:;
#X msg 339 464 1 2 3;
#X text 44 364 "f": list of floats;
#X obj 339 492 list prepend f;
#X text 389 463 "f";
#X connect 4 0 17 0;
#X connect 6 0 18 0;
#X connect 11 0 6 0;
#X connect 14 0 16 0;
#X connect 15 0 20 0;
#X connect 16 0 20 0;
#X connect 17 0 14 0;
#X connect 18 0 14 0;
#X connect 19 0 20 0;
#X connect 21 0 4 0;
#X connect 24 0 26 0;
#X connect 26 0 14 0;
#X restore 69 161 pd metadata;
#X msg 87 262 latency \$1;
#X text 175 241 latency in ms (default: 25 ms);
#X text 277 492 4) latency (default: 25 ms);
#X text 277 372 1) number of channels (default: 1);
#X text 276 419 2) port number for incoming messages;
#X text 276 447 3) sink ID \, must be unique for all [aoo_receive~];
#X text 297 467 instances on the same port;
#X obj 36 524 aoo_receive~ 2 9999 2;
#X obj 202 572 aoo_send~ 2 9999 1;
#X obj 38 370 aoo_receive~ 2 9999 1;
#X text 297 393 HINT: use 0 channels for pure message streams;
#X text 160 161 invitation metadata;
#X floatatom 87 236 6 0 0 0 - - - 0;
#X text 129 129 uninvite all AOO sources;
#X text 34 23 aoo_receive~: receive one or more AOO audio streams;
#X text 88 297 advanced settings:;
#X obj 67 338 r \$0-msg;
#X text 321 297 multichannel support:;
#X obj 479 297 bng 19 250 50 0 \$0-show-mc \$0-dummy empty 0 -10 0 12 #fcfcfc #000000 #000000;
#N canvas 1303 376 450 418 guts 0;
#X obj 38 271 pdcontrol;
#X msg 38 243 dir;
#X obj 38 36 r \$0-show-mc;
#X obj 38 86 aoo;
#X obj 126 189 print;
#X msg 126 162 This version of Pd does not support multichannel signals;
#X obj 126 134 b;
#X obj 38 110 route multichannel;
#X msg 38 60 multichannel;
#X obj 38 134 sel 1 -1, f 11;
#X msg 75 221 AOO has been compiled without multichannel support!;
#X obj 75 245 print;
#X msg 38 298 \; pd open mc_aoo_receive~.pd \$1 1;
#X connect 0 0 12 0;
#X connect 1 0 0 0;
#X connect 2 0 8 0;
#X connect 3 0 7 0;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 7 0 9 0;
#X connect 8 0 3 0;
#X connect 9 0 1 0;
#X connect 9 1 10 0;
#X connect 9 2 6 0;
#X connect 10 0 11 0;
#X restore 37 617 pd guts;
#X text 34 449 HINT: open aoo_send~-help.pd to receive a stream., f 29;
#X obj 530 507 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 182 421 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X text 197 369 events:;
#X connect 1 0 47 0;
#X connect 3 0 34 0;
#X connect 6 0 34 0;
#X connect 8 0 34 0;
#X connect 11 0 12 0;
#X connect 13 0 14 0;
#X connect 16 0 34 0;
#X connect 24 0 34 0;
#X connect 25 0 34 0;
#X connect 32 0 11 0;
#X connect 32 1 13 0;
#X connect 34 0 21 0;
#X connect 34 1 21 1;
#X connect 34 2 1 0;
#X connect 37 0 25 0;
#X connect 41 0 34 0;
#X connect 46 0 2 0;
