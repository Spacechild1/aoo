#N canvas 430 15 658 913 12;
#X declare -lib aoo;
#X obj 379 266 declare -lib aoo;
#X text 38 25 [aoo_server] / [aoo_client]: objects for UDP hole punching;
#N canvas 270 227 480 502 server 0;
#X floatatom 32 369 5 0 0 0 - - - 0;
#N canvas 71 488 756 237 events 0;
#X obj 37 37 inlet;
#X obj 37 62 print aoo_server;
#X msg 37 93 user_join <user> <id> <ip> <port>;
#X text 288 92 a new user connected to the server;
#X text 290 123 a user disconnected from the server;
#X msg 37 123 user_leave <user> <id> <ip> <port>;
#X text 290 156 a user joined a group;
#X text 292 189 a user left a group;
#X msg 37 156 group_join <group> <user> <id>;
#X msg 38 189 group_leave <group> <user> <id>;
#X connect 0 0 1 0;
#X restore 134 369 pd events;
#X text 32 400 outlets:;
#X text 45 422 1) number of connected users;
#X text 45 442 2) events;
#X text 25 29 [aoo_server]: the UDP punch hole server;
#X text 28 56 creation arguments:;
#X text 45 78 1) port number;
#X text 28 144 NOTE: If you want to connect clients over the public internet \, your server machine must be publicly accessible and the given port number must be known by all clients.;
#X text 28 107 Use this object to host an AOO server for a local network or the public internet., f 58;
#X text 29 198 Each user is identified by its name or unique ID. A single user can join multiple groups., f 49;
#X msg 32 254 port 8003;
#X text 112 254 set listening port;
#X msg 45 306 relay \$1;
#X obj 45 280 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X text 117 282 enable/disable server relay;
#X text 115 306 (disabled by default);
#X obj 32 344 aoo_server 8002;
#X connect 11 0 17 0;
#X connect 13 0 17 0;
#X connect 14 0 13 0;
#X connect 17 0 0 0;
#X connect 17 1 1 0;
#X restore 129 267 pd server;
#N canvas 669 134 750 739 client 0;
#X text 24 21 [aoo_client]: the client;
#X text 26 131 creation arguments:;
#X text 50 151 1) port number, f 15;
#X obj 25 596 aoo_client;
#X msg 35 240 disconnect;
#X text 127 596 outlets:;
#X msg 47 466 group_leave <group>;
#X text 125 241 Disconnect from the server.;
#X text 138 621 1) connection status (1|0);
#X text 138 645 2) events/replies;
#X text 61 375 You will get a [peer_join( message for every existing peer in the group (see "events")., f 88;
#X msg 58 513 peer_list;
#X text 24 103 A peer is defined by its group name \, user name \, user ID \, IP address and port number., f 90;
#X text 196 466 Leave a group.;
#X text 25 52 Clients connect to the server and join a group to obtain the (public) IP addresses of their peers. This enables peers to send each other messages over the interent which usually isn't possible because of NAT. For more info see https://en.wikipedia.org/wiki/UDP_hole_punching., f 93;
#X text 62 396 NOTE: it's possible to join several groups simultanously!, f 58;
#X text 138 669 3) peer (see "osc messages");
#X msg 25 201 connect <hostname> <port>, f 26;
#X text 325 283 Join a group as a user.;
#X text 234 196 Connect to the AOO server with the given hostname/IP address and port number. Outputs 1 on success or 0 on failure., f 61;
#X msg 44 276 group_join <group_name> <group_pwd> <user_name> [<user_pwd>], f 37;
#X text 59 319 The group password is shared by all users. If you don't care about security \, just use the group name itself or a simple symbol like '_'., f 77;
#X text 60 354 The user name must be unique within the group. The user password is optional., f 77;
#X text 60 424 Outputs;
#X msg 124 422 group_join <1|0>;
#X text 303 466 Outputs;
#X msg 367 464 group_leave <1|0>;
#X text 498 464 on success/fail.;
#X text 248 424 on success/fail.;
#X text 58 564 Send messages to peers:;
#N canvas 531 18 1060 814 messages 0;
#X msg 47 102 disconnect;
#X obj 721 381 oscformat bazoo;
#X msg 721 355 1 2 3;
#X text 327 174 send to all peers in a given group, f 35;
#X text 378 204 send to a single peer;
#X msg 116 402 target;
#X msg 110 371 target <group>;
#X msg 99 339 target <group> <user>;
#X text 258 273 send an OSC message to the current target (more efficient than the methods above), f 43;
#X text 260 310 "send" selector is optional;
#X text 263 340 target a single peer;
#X text 221 374 target a group;
#X text 171 402 broadcast (= default);
#X msg 122 444 offset <f>;
#X obj 58 731 print A;
#X text 144 659 The third outlet outputs the sender as;
#X msg 733 464 target test2 C;
#X msg 739 490 target;
#X msg 744 544 offset \$1;
#X msg 131 531 schedule \$1;
#X obj 131 505 tgl 19 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X text 229 534 0: don't schedule \, instead output the required delay., f 54;
#X obj 27 655 tgl 19 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 691 599 tgl 19 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 860 665 tgl 19 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 27 628 aoo_client 9992;
#X obj 691 573 aoo_client 9993;
#X obj 860 639 aoo_client 9994;
#X msg 132 591 discard_late \$1;
#X obj 132 566 tgl 19 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X text 256 567 Discard late bundles. This is only relevant for automatic scheduling. With manual scheduling \, users can simply filter messages with a negative delay., f 58;
#X msg 728 437 target test2 A;
#X obj 886 449 oscformat bazoo;
#X msg 886 424 1 2 3;
#X msg 904 556 target;
#X msg 909 611 offset \$1;
#X msg 893 503 target test2 A;
#X msg 898 530 target test2 B;
#X msg 125 476 offset -1;
#X msg 798 518 -1;
#X msg 963 584 -1;
#X msg 421 659 list <group> <name> <delay>;
#X text 145 629 Incoming messages are sent to the second outlet as, f 51;
#X msg 506 629 msg <type> <data...>;
#X msg 55 145 broadcast <bytes...>;
#X msg 62 173 send_group <group> <type> <bytes...>;
#X msg 70 205 send_peer <group> <user> <type> <bytes...>;
#X msg 78 235 send_peer <IP> <port> <type> <bytes...>;
#X msg 85 278 send <type> <bytes...>;
#X msg 92 309 list <type> <bytes...>;
#X obj 58 656 route msg;
#X obj 58 681 route osc;
#X obj 58 705 oscparse;
#X obj 721 405 list prepend osc;
#X floatatom 744 518 6 0 0 0 - - - 0;
#X floatatom 909 585 6 0 0 0 - - - 0;
#X obj 886 473 list prepend osc;
#X obj 742 602 route msg;
#X obj 742 627 route osc;
#X obj 742 651 oscparse;
#X obj 911 669 route msg;
#X obj 911 694 route osc;
#X obj 911 718 oscparse;
#X text 610 67 possible values for <type>:;
#X text 606 100 "raw": raw bytes;
#X text 607 120 "osc": OSC message;
#X text 608 141 "fudi": FUDI message;
#X text 609 163 "midi": MIDI message;
#X text 609 185 "text": plain text;
#X text 609 207 "json": JSON text;
#X text 612 232 "xml": XML text;
#X msg 37 72 group_join test2 _ A;
#X msg 28 44 connect localhost 8002;
#X msg 710 326 disconnect;
#X msg 691 268 connect localhost 8002;
#X msg 700 296 group_join test2 _ B;
#X msg 879 391 disconnect;
#X msg 860 333 connect localhost 8002;
#X msg 869 361 group_join test2 _ C;
#X obj 742 681 print B;
#X obj 911 748 print C;
#X text 211 146 send a message to all peers;
#X text 208 440 Set the time offset in ms. Use this for scheduling messages in the future to preserve relative timing.;
#X text 210 476 No offset = send immediately. This is the default., f 53;
#X text 228 513 1: automatically schedule incoming messages.;
#X text 143 691 <delay> is the difference in ms between the message timestamp and the current system time. If the delay is negative \, it means the message is late \, i.e. the timestamp has expired before arrival., f 72;
#X connect 0 0 25 0;
#X connect 1 0 53 0;
#X connect 2 0 1 0;
#X connect 5 0 25 0;
#X connect 6 0 25 0;
#X connect 7 0 25 0;
#X connect 13 0 25 0;
#X connect 16 0 26 0;
#X connect 17 0 26 0;
#X connect 18 0 26 0;
#X connect 19 0 25 0;
#X connect 20 0 19 0;
#X connect 25 0 22 0;
#X connect 25 1 50 0;
#X connect 25 2 14 0;
#X connect 26 0 23 0;
#X connect 26 1 57 0;
#X connect 26 2 79 0;
#X connect 27 0 24 0;
#X connect 27 1 60 0;
#X connect 27 2 80 0;
#X connect 28 0 25 0;
#X connect 29 0 28 0;
#X connect 31 0 26 0;
#X connect 32 0 56 0;
#X connect 33 0 32 0;
#X connect 34 0 27 0;
#X connect 35 0 27 0;
#X connect 36 0 27 0;
#X connect 37 0 27 0;
#X connect 38 0 25 0;
#X connect 39 0 18 0;
#X connect 40 0 35 0;
#X connect 44 0 25 0;
#X connect 45 0 25 0;
#X connect 46 0 25 0;
#X connect 47 0 25 0;
#X connect 48 0 25 0;
#X connect 49 0 25 0;
#X connect 50 0 51 0;
#X connect 50 1 14 0;
#X connect 51 0 52 0;
#X connect 52 0 14 0;
#X connect 53 0 26 0;
#X connect 54 0 18 0;
#X connect 55 0 35 0;
#X connect 56 0 27 0;
#X connect 57 0 58 0;
#X connect 57 1 79 0;
#X connect 58 0 59 0;
#X connect 59 0 79 0;
#X connect 60 0 61 0;
#X connect 60 1 80 0;
#X connect 61 0 62 0;
#X connect 62 0 80 0;
#X connect 71 0 25 0;
#X connect 72 0 25 0;
#X connect 73 0 26 0;
#X connect 74 0 26 0;
#X connect 75 0 26 0;
#X connect 76 0 27 0;
#X connect 77 0 27 0;
#X connect 78 0 27 0;
#X restore 229 564 pd messages;
#X msg 373 534 peer <group> <user> <id> <IP> <port>;
#X text 141 510 Get a list all a peers. This will output a series of [peer( messages:, f 70;
#N canvas 1076 331 692 393 events 0;
#X msg 32 170 peer_leave <group> <user> <id> <IP> <port>;
#X text 344 170 a peer has left the group;
#X msg 32 307 msg <type> <bytes...>;
#X text 197 307 message received from peer. See "pd messages".;
#X text 34 33 events:;
#X msg 32 135 peer_join <group> <user> <id> <IP> <port>;
#X text 343 137 a new peer has joined the group;
#X msg 33 63 peer_handshake <group> <user> <id> <IP> <port>;
#X text 377 61 begin handshake with new peer in group;
#X msg 32 95 peer_timeout <group> <user> <id> <IP> <port>;
#X text 366 92 handshake has timed out - could not establish connection with peer, f 37;
#X msg 32 220 peer_ping <group> <user> <id> <IP> <port> <delay>;
#X text 398 219 received ping from peer;
#X msg 32 250 peer_pong <group> <user> <id> <IP> <port> <delay1> <delay2> <rtt>, f 43;
#X text 350 257 received pong from peer;
#X restore 270 645 pd events;
#X connect 4 0 3 0;
#X connect 6 0 3 0;
#X connect 11 0 3 0;
#X connect 17 0 3 0;
#X connect 20 0 3 0;
#X restore 208 267 pd client;
#X text 43 266 More info:;
#X text 40 76 A client on a given port first connects to an AOO server. For the internet \, the server has to be publicly accessable. For local networks \, the server can be private \, i.e. run on a user's machine., f 76;
#X text 38 51 These objects allow peers to easily communicate with each other in a network., f 78;
#X text 41 168 A peer is referenced by its group and user name \, so that <group> <user> effectively replaces <host> <port> in all relevant methods and events., f 77;
#X text 41 208 All AOO objects on the same port share the same peer list.;
#X text 40 130 Once the client has joined a group \, it receives a list of all existing peers in that group and is notified whenever a peer joins/leaves the group., f 77;
#X text 41 234 You can always use the public AOO server of the IEM: vrr.iem.at 7077, f 70;
#X msg 67 426 disconnect;
#X msg 333 422 disconnect;
#X obj 317 622 tgl 19 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X msg 45 740 add test bar 1;
#X msg 53 765 remove;
#X msg 329 766 uninvite;
#X msg 319 741 invite test foo 1;
#X msg 186 814 \; pd dsp \$1;
#X obj 186 789 tgl 19 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X msg 60 792 start;
#X msg 107 792 stop;
#X obj 74 513 oscformat bazoo;
#X msg 74 486 1 2 3;
#X msg 341 512 1 2 3;
#X obj 341 541 oscformat hooray;
#X obj 98 661 oscparse;
#X obj 47 586 aoo_client 9990;
#X obj 317 596 aoo_client 9991;
#X obj 45 823 aoo_send~ 9990 1;
#X obj 319 822 aoo_receive~ 9991 1;
#X obj 74 461 bng 19 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 341 458 bng 19 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X text 389 458 send a message to a single peer (test|foo), f 25;
#X obj 341 483 t b b;
#X msg 392 512 target test foo;
#X obj 98 687 print FOO;
#X obj 368 698 print BAR;
#X obj 45 850 print FOO;
#X obj 449 849 print BAR;
#X msg 60 393 group_join test _ foo _;
#X msg 317 344 connect localhost 8002;
#X obj 98 612 route msg;
#X text 98 460 send a message to all peers;
#X obj 74 541 list prepend osc;
#X obj 341 565 list prepend osc;
#X obj 98 636 route osc;
#X obj 368 623 route msg;
#X obj 368 647 route osc;
#X obj 368 671 oscparse;
#X text 49 316 1) connect to (local) server;
#X text 60 368 2) join group "test" as user "foo";
#X text 314 318 1) connect to (local) server;
#X text 326 369 2) join group "test" as user "bar";
#X text 40 715 use group/user in AOO source and sink;
#X obj 47 611 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X msg 48 343 connect localhost 8002;
#X msg 325 392 group_join test _ bar _;
#X connect 11 0 27 0;
#X connect 12 0 28 0;
#X connect 14 0 29 0;
#X connect 15 0 29 0;
#X connect 16 0 30 0;
#X connect 17 0 30 0;
#X connect 19 0 18 0;
#X connect 20 0 29 0;
#X connect 21 0 29 0;
#X connect 22 0 44 0;
#X connect 23 0 22 0;
#X connect 24 0 25 0;
#X connect 25 0 45 0;
#X connect 26 0 36 0;
#X connect 27 0 55 0;
#X connect 27 1 42 0;
#X connect 27 2 36 0;
#X connect 28 0 13 0;
#X connect 28 1 47 0;
#X connect 28 2 37 0;
#X connect 29 0 38 0;
#X connect 30 1 39 0;
#X connect 31 0 23 0;
#X connect 32 0 34 0;
#X connect 34 0 24 0;
#X connect 34 1 35 0;
#X connect 35 0 28 0;
#X connect 40 0 27 0;
#X connect 41 0 28 0;
#X connect 42 0 46 0;
#X connect 42 1 36 0;
#X connect 44 0 27 0;
#X connect 45 0 28 0;
#X connect 46 0 26 0;
#X connect 47 0 48 0;
#X connect 47 1 37 0;
#X connect 48 0 49 0;
#X connect 49 0 37 0;
#X connect 56 0 27 0;
#X connect 57 0 28 0;
