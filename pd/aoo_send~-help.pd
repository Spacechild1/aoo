#N canvas 605 2 674 728 12;
#X declare -lib aoo;
#X text 182 615 creation arguments:;
#N canvas 135 97 551 377 pcm 0;
#X obj 31 323 outlet;
#X msg 187 78 2;
#X msg 198 104 3;
#X msg 204 130 4;
#X msg 210 155 8;
#X obj 187 182 t b f;
#X msg 119 125 44100;
#X msg 126 149 48000;
#X msg 110 102 22050;
#X obj 102 180 t b f;
#X msg 42 99 64;
#X msg 51 124 128;
#X msg 58 148 256;
#X obj 31 214 pack 64 44100 4;
#X msg 31 266 format pcm \$1 \$2 \$3;
#X msg 63 176 512;
#X obj 32 77 nbx 5 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0 10
-262144 -1 -1 0 256;
#X obj 102 78 nbx 5 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0
10 -262144 -1 -1 0 256;
#X text 230 78 16-bit integer;
#X text 238 105 24-bit integer;
#X text 241 128 32-bit float;
#X text 244 155 64-bit float;
#X text 28 55 blocksize;
#X text 102 55 samplerate;
#X text 186 56 bitdepth (default: 4);
#X text 128 295 all arguments are optional!;
#X text 39 240 [format pcm <blocksize> <samplerate> <bitdepth>(;
#X msg 41 295 format pcm;
#X text 29 28 uncompressed PCM;
#X connect 1 0 5 0;
#X connect 2 0 5 0;
#X connect 3 0 5 0;
#X connect 4 0 5 0;
#X connect 5 0 13 0;
#X connect 5 1 13 2;
#X connect 6 0 9 0;
#X connect 7 0 9 0;
#X connect 8 0 9 0;
#X connect 9 0 13 0;
#X connect 9 1 13 1;
#X connect 10 0 13 0;
#X connect 11 0 13 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 0 0;
#X connect 15 0 13 0;
#X connect 16 0 13 0;
#X connect 17 0 9 0;
#X connect 27 0 0 0;
#X restore 112 545 pd pcm;
#N canvas 104 170 832 547 opus 0;
#X obj 50 493 outlet;
#X msg 161 164 48000;
#X obj 137 217 t b f;
#X obj 50 92 nbx 5 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0 10
-262144 -1 -1 0 256;
#X obj 137 93 nbx 5 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0
10 -262144 -1 -1 0 256;
#X text 137 70 samplerate;
#X text 60 365 [format opus <blocksize> <samplerate> <bitrate> <complexity>
<signal type>(, f 77;
#X obj 224 92 nbx 5 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0
10 -262144 -1 -1 0 256;
#X msg 245 142 max;
#X obj 340 92 nbx 5 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0
10 -262144 -1 -1 0 256;
#X msg 63 463 format opus;
#X text 153 463 all arguments are optional!;
#X msg 235 113 auto;
#X text 339 69 complexity (0 - 10);
#X text 223 70 bitrate (bit/s);
#X msg 351 117 auto;
#X text 486 68 signal type;
#X msg 588 91 auto;
#X msg 491 91 music;
#X msg 539 91 voice;
#X obj 224 193 t b a;
#X obj 491 222 t b a;
#X obj 430 330 text define \$0-opus;
#X obj 430 278 loadbang;
#X msg 430 302 set 512 48000 auto auto auto;
#X obj 50 246 t b f;
#X obj 340 201 t b a;
#X obj 50 394 list prepend format opus;
#X obj 50 422 list trim;
#X obj 82 277 text set \$0-opus 0 0;
#X obj 169 243 text set \$0-opus 0 1;
#X obj 256 277 text set \$0-opus 0 2;
#X obj 372 251 text set \$0-opus 0 3;
#X obj 523 275 text set \$0-opus 0 4;
#X obj 523 249 symbol;
#X obj 372 225 list;
#X obj 256 218 list;
#X text 45 70 blocksize;
#X msg 154 140 24000;
#X msg 145 117 12000;
#X msg 50 301 0;
#X obj 50 334 text get \$0-opus;
#X msg 59 114 128;
#X msg 65 139 256;
#X msg 71 163 512;
#X msg 77 187 1024;
#X msg 84 212 2048;
#X text 47 35 Opus is a high quality codec for compressed audio \,
see http://opus-codec.org/, f 79;
#X connect 1 0 2 0;
#X connect 2 0 40 0;
#X connect 2 1 30 0;
#X connect 3 0 25 0;
#X connect 4 0 2 0;
#X connect 7 0 20 0;
#X connect 8 0 20 0;
#X connect 9 0 26 0;
#X connect 10 0 0 0;
#X connect 12 0 20 0;
#X connect 15 0 26 0;
#X connect 17 0 21 0;
#X connect 18 0 21 0;
#X connect 19 0 21 0;
#X connect 20 0 40 0;
#X connect 20 1 36 0;
#X connect 21 0 40 0;
#X connect 21 1 34 0;
#X connect 23 0 24 0;
#X connect 24 0 22 0;
#X connect 25 0 40 0;
#X connect 25 1 29 0;
#X connect 26 0 40 0;
#X connect 26 1 35 0;
#X connect 27 0 28 0;
#X connect 28 0 0 0;
#X connect 34 0 33 0;
#X connect 35 0 32 0;
#X connect 36 0 31 0;
#X connect 38 0 2 0;
#X connect 39 0 2 0;
#X connect 40 0 41 0;
#X connect 41 0 27 0;
#X connect 42 0 25 0;
#X connect 43 0 25 0;
#X connect 44 0 25 0;
#X connect 45 0 25 0;
#X connect 46 0 25 0;
#X restore 169 545 pd opus;
#X text 110 521 set format:;
#X obj 89 326 nbx 5 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0
10 -262144 -1 -1 0 256;
#X obj 97 376 nbx 5 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0
10 -262144 -1 -1 0 256;
#X msg 97 395 packetsize \$1;
#X text 203 393 max. UDP packet size (default: 512 bytes);
#X obj 103 423 nbx 8 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0
10 -262144 -1 -1 0 256;
#X msg 103 442 timefilter \$1;
#X text 207 443 time DLL filter bandwidth (default: 0.0001);
#X text 439 681 see also;
#X obj 508 679 aoo_receive~;
#X obj 48 580 osc~ 440;
#X obj 116 579 osc~ 220;
#X obj 48 606 *~ 0.25;
#X obj 116 605 *~ 0.25;
#X msg 108 491 resend \$1;
#X obj 108 470 nbx 5 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0
10 -262144 -1 -1 0 256;
#X text 187 492 buffersize (ms) for resending lost packets (default:
1000);
#X msg 29 52 add localhost 9999 1;
#X text 26 19 aoo_send~: send an AoO audio stream to one or more AoO
sinks;
#X msg 50 140 remove localhost 9999 1;
#X text 229 139 remove an AoO sink (hostname \, port \, sink ID);
#X msg 64 200 clear;
#X text 117 201 remove all AoO sinks;
#X msg 89 348 channel localhost 9999 1 \$1;
#X text 296 349 set sink channel onset;
#X text 185 52 add an AoO sink (hostname \, port \, sink ID \, [channel
onset]);
#X text 211 82 with optional channel onset;
#X msg 507 624 \; pd dsp \$1;
#X obj 507 600 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 71 232 list_sinks;
#X text 158 229 list all sinks. This will output a message [sink <host>
<port> <id>( for each sink., f 44;
#X obj 29 685 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 43 111 add localhost 9999 *;
#X text 203 112 send to all AoO sinks on the given endpoint;
#X msg 57 170 remove localhost 9999 *;
#X msg 36 82 add localhost 9999 1 1;
#X text 241 170 remove all AoO sinks on the given endpoint;
#X msg 81 299 stop;
#X msg 76 271 start;
#X obj 478 19 declare -lib aoo;
#X text 182 637 1) port \, 2) ID \, 3) num channels, f 32;
#X obj 29 633 aoo_send~ 9998 1 2;
#N canvas 847 252 532 366 events 0;
#X obj 37 37 inlet;
#X obj 88 87 print SINK;
#X obj 37 61 route ping sink;
#X obj 37 86 outlet;
#X text 35 123 [ping <host> <port> <ID>(;
#X text 36 189 [invite <host> <port> <ID>(;
#X text 64 145 a periodic message sent from the sink to tell the source
that it is receiving its messages., f 46;
#X text 66 234 you may respond with [add <host> <port> <ID>( or ignore
it.;
#X text 35 261 [uninvite <host> <port> <ID>(;
#X text 67 213 a sink invites you to send audio messages.;
#X text 67 286 a sink ask you to stop sending audio messages.;
#X text 66 307 you may respond with [remove <host> <port> <ID>( or
ignore it., f 62;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 2 1 1 0;
#X restore 29 659 pd events;
#X text 50 683 ping;
#X text 256 272 Note: you can use these two methods to send "audio
events" instead of continuous streams., f 36;
#X text 125 272 start streaming;
#X text 127 299 stop streaming;
#X connect 1 0 44 0;
#X connect 2 0 44 0;
#X connect 4 0 26 0;
#X connect 5 0 6 0;
#X connect 6 0 44 0;
#X connect 8 0 9 0;
#X connect 9 0 44 0;
#X connect 13 0 15 0;
#X connect 14 0 16 0;
#X connect 15 0 44 0;
#X connect 16 0 44 1;
#X connect 17 0 44 0;
#X connect 18 0 17 0;
#X connect 20 0 44 0;
#X connect 22 0 44 0;
#X connect 24 0 44 0;
#X connect 26 0 44 0;
#X connect 31 0 30 0;
#X connect 32 0 44 0;
#X connect 35 0 44 0;
#X connect 37 0 44 0;
#X connect 38 0 44 0;
#X connect 40 0 44 0;
#X connect 41 0 44 0;
#X connect 44 0 45 0;
#X connect 45 0 34 0;
